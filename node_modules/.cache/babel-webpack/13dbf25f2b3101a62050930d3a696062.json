{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { ResponderModel } from 'src/app/models/responders/responder-model';\nimport { TokenReposnderModel } from 'src/app/models/token-reposnders/token-reponder-model';\nimport { LoginModel } from 'src/app/models/users/login-model';\nimport { UserInfoModel } from 'src/app/models/users/user-info-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user/user.service\";\nimport * as i2 from \"src/app/services/auth/auth.service\";\nimport * as i3 from \"src/app/services/permissions/permission.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(user, auth, permissionService, route, toastr, formBuilder) {\n      this.user = user;\n      this.auth = auth;\n      this.permissionService = permissionService;\n      this.route = route;\n      this.toastr = toastr;\n      this.formBuilder = formBuilder;\n      this.tokenLogin = new TokenReposnderModel();\n      this.login = new LoginModel();\n      this.userMe = new UserInfoModel();\n      this.reponder = new ResponderModel();\n      this.userPermissionsArray = [];\n      this.permissionsName = [''];\n      this.userName = new FormControl(''); //, [Validators.required, Validators.minLength(5)]);\n\n      this.password = new FormControl(''); //, [Validators.required, Validators.minLength(5)]);\n\n      this.form = this.formBuilder.group({\n        username: this.userName,\n        password: this.password\n      });\n    }\n\n    get formControls() {\n      return this.form.controls;\n    }\n\n    onSubmit() {\n      this.login.login = this.userName.value;\n      this.login.password = this.password.value;\n      this.user.postLogin(this.login).pipe(first()).subscribe(res => {\n        this.form.reset();\n        this.tokenLogin.type = res.type;\n        this.tokenLogin.token = res.token;\n        this.auth.saveType(this.tokenLogin.type);\n        this.auth.saveToken(this.tokenLogin.token);\n\n        if (this.tokenLogin.token.length > 2) {\n          this.toastr.success(\"jesteś zalogowany\");\n          this.saveUsernameAndId();\n        }\n      }, error => {\n        console.error(`ErrorHttp: ${JSON.stringify(error)}`);\n      });\n    }\n\n    saveUsernameAndId() {\n      this.user.getMe().subscribe(res => {\n        this.userMe = res;\n        this.user.saveUserName(this.userMe.userName);\n        this.user.saveUserId(this.userMe.id);\n        this.getPermissions(this.userMe.id);\n        this.route.navigate(['']);\n      });\n    }\n\n    getPermissions(userId) {\n      return this.permissionService.getPermissions(userId).pipe(first()).subscribe(res => {\n        this.reponder = res;\n        this.userPermissionsArray = this.reponder.object;\n\n        for (let i = 0; i < this.userPermissionsArray.length; i++) {\n          this.permissionsName[i] = this.userPermissionsArray[i].permissionName;\n        }\n\n        this.permissionService.savePermissionsList(this.permissionsName);\n      }, error => {\n        console.error('ErrorHttp: ${JSON.stringify(error)}');\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.PermissionService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i6.FormBuilder));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 5,\n    consts: [[1, \"centerMe\"], [2, \"margin-top\", \"40px\", \"padding-top\", \"40px\"], [2, \"font-size\", \"24px\"], [3, \"formGroup\", \"ngSubmit\"], [2, \"margin\", \"auto\", \"margin-top\", \"40px\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"login\", \"formControlName\", \"username\"], [2, \"margin\", \"auto\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"has\\u0142o\", \"formControlName\", \"password\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"accent\", 2, \"margin-top\", \"30px\"], [\"mat-flat-button\", \"\", \"routerLink\", \"/login\", 2, \"margin-top\", \"20px\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\", 2);\n        i0.ɵɵtext(3, \"LOGOWANIE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-content\");\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵelementStart(7, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Nazwa u\\u017Cytkownika lub e-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵelementStart(12, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Has\\u0142o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵelementStart(17, \"button\", 8);\n        i0.ɵɵtext(18, \"Logowanie\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"a\", 9);\n        i0.ɵɵtext(20, \"Rejestracja\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n      }\n    },\n    directives: [i7.MatCard, i8.MatLabel, i7.MatCardContent, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i8.MatFormField, i9.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlName, i10.MatButton, i10.MatAnchor, i4.RouterLinkWithHref],\n    styles: [\".centerMe[_ngcontent-%COMP%]{min-width:300px;max-width:500px;margin:auto;text-align:center}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}