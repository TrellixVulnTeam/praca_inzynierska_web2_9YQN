{"ast":null,"code":"import _asyncToGenerator from \"D:/inz/praca-inzynierska-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { throwError } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\nimport { UserPermissionModel } from 'src/app/models/user-permissions/user-permission-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../settings/settings.service\";\nimport * as i3 from \"../user/user.service\";\nconst PERMISSION_LIST = 'PERMISSIONS_LIST';\nexport class PermissionService {\n  constructor(httpClient, seetings, userService) {\n    this.httpClient = httpClient;\n    this.seetings = seetings;\n    this.userService = userService;\n    this.userId = '';\n    this.permissionName = '';\n    this.isPermitted = false;\n    this.respond = new UserPermissionModel();\n  }\n\n  getPermissionList(id) {\n    const apiUrl = this.seetings.getApiUrl + '/api/UserPermission/GetAllPermissionsForUser?userId=' + id;\n    return this.httpClient.get(apiUrl).pipe(map(response => {\n      return response;\n    }), catchError(error => {\n      return this.handleError(error);\n    }));\n  }\n\n  savePermissionsList(permissions) {\n    sessionStorage.removeItem(PERMISSION_LIST);\n    sessionStorage.setItem(PERMISSION_LIST, JSON.stringify(permissions));\n    sessionStorage.setItem(PERMISSION_LIST, JSON.stringify(permissions));\n  }\n\n  checkPermission(permissionName) {\n    this.userId = this.userService.getUserId();\n    const apiUrl = this.seetings.getApiUrl + '/api/UserPermission/GetPermitionByUserGuidAndPermission?userId=' + this.userId + '&permissionName=' + permissionName;\n    return this.httpClient.get(apiUrl).pipe(map(responder => {\n      return responder;\n    }), catchError(error => {\n      return this.handleError(error);\n    }));\n  }\n\n  isPermited(permissionNameToCheck) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var isAllowed = false;\n\n      _this.checkPermission(permissionNameToCheck).pipe(first()).subscribe(responder => {\n        _this.respond = responder.object;\n\n        if (_this.respond != null) {\n          isAllowed = true;\n          return true;\n        } else {\n          isAllowed = false;\n        }\n\n        return isAllowed;\n      }, error => {\n        console.error(`ErrorHttp: ${JSON.stringify(error)}`);\n        return isAllowed;\n      });\n\n      var a = 1 + 2;\n      return yield isAllowed;\n    })();\n  }\n\n  handleError(error) {\n    console.log(`HttpError: ${JSON.stringify(error)}`);\n    return throwError(error);\n  }\n\n}\n\nPermissionService.ɵfac = function PermissionService_Factory(t) {\n  return new (t || PermissionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SettingsService), i0.ɵɵinject(i3.UserService));\n};\n\nPermissionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PermissionService,\n  factory: PermissionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/inz/praca-inzynierska-web/src/app/services/permissions/permission.service.ts"],"names":["throwError","catchError","first","map","UserPermissionModel","i0","i1","i2","i3","PERMISSION_LIST","PermissionService","constructor","httpClient","seetings","userService","userId","permissionName","isPermitted","respond","getPermissionList","id","apiUrl","getApiUrl","get","pipe","response","error","handleError","savePermissionsList","permissions","sessionStorage","removeItem","setItem","JSON","stringify","checkPermission","getUserId","responder","isPermited","permissionNameToCheck","isAllowed","subscribe","object","console","a","log","ɵfac","PermissionService_Factory","t","ɵɵinject","HttpClient","SettingsService","UserService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { throwError } from 'rxjs';\r\nimport { catchError, first, map } from 'rxjs/operators';\r\nimport { UserPermissionModel } from 'src/app/models/user-permissions/user-permission-model';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"../settings/settings.service\";\r\nimport * as i3 from \"../user/user.service\";\r\nconst PERMISSION_LIST = 'PERMISSIONS_LIST';\r\nexport class PermissionService {\r\n    constructor(httpClient, seetings, userService) {\r\n        this.httpClient = httpClient;\r\n        this.seetings = seetings;\r\n        this.userService = userService;\r\n        this.userId = '';\r\n        this.permissionName = '';\r\n        this.isPermitted = false;\r\n        this.respond = new UserPermissionModel;\r\n    }\r\n    getPermissionList(id) {\r\n        const apiUrl = this.seetings.getApiUrl + '/api/UserPermission/GetAllPermissionsForUser?userId=' + id;\r\n        return this.httpClient\r\n            .get(apiUrl)\r\n            .pipe(map(response => {\r\n            return response;\r\n        }), catchError(error => {\r\n            return this.handleError(error);\r\n        }));\r\n    }\r\n    savePermissionsList(permissions) {\r\n        sessionStorage.removeItem(PERMISSION_LIST);\r\n        sessionStorage.setItem(PERMISSION_LIST, JSON.stringify(permissions));\r\n        sessionStorage.setItem(PERMISSION_LIST, JSON.stringify(permissions));\r\n    }\r\n    checkPermission(permissionName) {\r\n        this.userId = this.userService.getUserId();\r\n        const apiUrl = this.seetings.getApiUrl + '/api/UserPermission/GetPermitionByUserGuidAndPermission?userId=' + this.userId + '&permissionName=' + permissionName;\r\n        return this.httpClient\r\n            .get(apiUrl)\r\n            .pipe(map(responder => {\r\n            return responder;\r\n        }), catchError(error => {\r\n            return this.handleError(error);\r\n        }));\r\n    }\r\n    async isPermited(permissionNameToCheck) {\r\n        var isAllowed = false;\r\n        this.checkPermission(permissionNameToCheck)\r\n            .pipe(first())\r\n            .subscribe(responder => {\r\n            this.respond = responder.object;\r\n            if (this.respond != null) {\r\n                isAllowed = true;\r\n                return true;\r\n            }\r\n            else {\r\n                isAllowed = false;\r\n            }\r\n            return isAllowed;\r\n        }, error => {\r\n            console.error(`ErrorHttp: ${JSON.stringify(error)}`);\r\n            return isAllowed;\r\n        });\r\n        var a = 1 + 2;\r\n        return await isAllowed;\r\n    }\r\n    handleError(error) {\r\n        console.log(`HttpError: ${JSON.stringify(error)}`);\r\n        return throwError(error);\r\n    }\r\n}\r\nPermissionService.ɵfac = function PermissionService_Factory(t) { return new (t || PermissionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SettingsService), i0.ɵɵinject(i3.UserService)); };\r\nPermissionService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PermissionService, factory: PermissionService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}