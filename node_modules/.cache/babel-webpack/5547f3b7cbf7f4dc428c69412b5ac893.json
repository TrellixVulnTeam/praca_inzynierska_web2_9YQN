{"ast":null,"code":"import _asyncToGenerator from \"D:/inz/praca-inzynierska-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/permissions/permission.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nexport class AuthorApproveGuard {\n  //isAllowed: boolean = false;\n  constructor(permissionsService, rout, toastr) {\n    this.permissionsService = permissionsService;\n    this.rout = rout;\n    this.toastr = toastr;\n  }\n\n  canActivate(route, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var isAllowed = yield _this.permissionsService.isPermited('Author.Approve');\n\n      if (isAllowed) {\n        return true;\n      } else {\n        _this.toastr.error('nie posiadasz uprawnień');\n\n        _this.rout.navigate(['/main']);\n\n        return false;\n      }\n    })();\n  }\n\n}\n\nAuthorApproveGuard.ɵfac = function AuthorApproveGuard_Factory(t) {\n  return new (t || AuthorApproveGuard)(i0.ɵɵinject(i1.PermissionService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrService));\n};\n\nAuthorApproveGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthorApproveGuard,\n  factory: AuthorApproveGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/inz/praca-inzynierska-web/src/app/guard/authors/author-approve.guard.ts"],"names":["i0","i1","i2","i3","AuthorApproveGuard","constructor","permissionsService","rout","toastr","canActivate","route","state","isAllowed","isPermited","error","navigate","ɵfac","AuthorApproveGuard_Factory","t","ɵɵinject","PermissionService","Router","ToastrService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iDAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,YAApB;AACA,OAAO,MAAMC,kBAAN,CAAyB;AAC5B;AACAC,EAAAA,WAAW,CAACC,kBAAD,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AAC1C,SAAKF,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACKC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AAAA;;AAAA;AAC5B,UAAIC,SAAS,SAAS,KAAI,CAACN,kBAAL,CAAwBO,UAAxB,CAAmC,gBAAnC,CAAtB;;AACA,UAAID,SAAJ,EAAe;AACX,eAAO,IAAP;AACH,OAFD,MAGK;AACD,QAAA,KAAI,CAACJ,MAAL,CAAYM,KAAZ,CAAkB,yBAAlB;;AACA,QAAA,KAAI,CAACP,IAAL,CAAUQ,QAAV,CAAmB,CAAC,OAAD,CAAnB;;AACA,eAAO,KAAP;AACH;AAT2B;AAU/B;;AAjB2B;;AAmBhCX,kBAAkB,CAACY,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAId,kBAAV,EAA8BJ,EAAE,CAACmB,QAAH,CAAYlB,EAAE,CAACmB,iBAAf,CAA9B,EAAiEpB,EAAE,CAACmB,QAAH,CAAYjB,EAAE,CAACmB,MAAf,CAAjE,EAAyFrB,EAAE,CAACmB,QAAH,CAAYhB,EAAE,CAACmB,aAAf,CAAzF,CAAP;AAAiI,CAApM;;AACAlB,kBAAkB,CAACmB,KAAnB,GAA2B,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,kBAAT;AAA6BsB,EAAAA,OAAO,EAAEtB,kBAAkB,CAACY,IAAzD;AAA+DW,EAAAA,UAAU,EAAE;AAA3E,CAAtB,CAAzC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"src/app/services/permissions/permission.service\";\r\nimport * as i2 from \"@angular/router\";\r\nimport * as i3 from \"ngx-toastr\";\r\nexport class AuthorApproveGuard {\r\n    //isAllowed: boolean = false;\r\n    constructor(permissionsService, rout, toastr) {\r\n        this.permissionsService = permissionsService;\r\n        this.rout = rout;\r\n        this.toastr = toastr;\r\n    }\r\n    async canActivate(route, state) {\r\n        var isAllowed = await this.permissionsService.isPermited('Author.Approve');\r\n        if (isAllowed) {\r\n            return true;\r\n        }\r\n        else {\r\n            this.toastr.error('nie posiadasz uprawnień');\r\n            this.rout.navigate(['/main']);\r\n            return false;\r\n        }\r\n    }\r\n}\r\nAuthorApproveGuard.ɵfac = function AuthorApproveGuard_Factory(t) { return new (t || AuthorApproveGuard)(i0.ɵɵinject(i1.PermissionService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrService)); };\r\nAuthorApproveGuard.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthorApproveGuard, factory: AuthorApproveGuard.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}