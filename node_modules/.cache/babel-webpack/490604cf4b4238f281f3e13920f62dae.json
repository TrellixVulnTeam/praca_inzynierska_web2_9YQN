{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { AuthorModel } from 'src/app/models/authors/author-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/author/author.service\";\nimport * as i2 from \"src/app/services/user/user.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/datepicker\";\nimport * as i10 from \"@angular/material/button\";\nconst AUTHOR_ADDED = 'autor został dodany poprawnie';\nexport let NewAuthorComponent = /*#__PURE__*/(() => {\n  class NewAuthorComponent {\n    constructor(authorService, userService, toastr, router, formBuilder) {\n      this.authorService = authorService;\n      this.userService = userService;\n      this.toastr = toastr;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.newAuthor = new AuthorModel();\n      this.userId = '';\n      this.surname = new FormControl(''), [Validators.required];\n      this.name = new FormControl('');\n      this.secondName = new FormControl('');\n      this.biography = new FormControl(''), [Validators.required];\n      this.birthDate = new FormControl(''), [Validators.required];\n      this.deathDate = new FormControl('');\n      this.form = this.formBuilder.group({\n        surname: this.surname,\n        name: this.name,\n        secondName: this.secondName,\n        biography: this.biography,\n        birthDate: this.birthDate,\n        deathDate: this.deathDate\n      });\n    }\n\n    isFormDirty() {\n      return !this.form.dirty;\n    }\n\n    onSubmit() {\n      this.userId = this.userService.getUserId();\n      this.newAuthor.isBuildIn = true;\n      this.newAuthor.surname = this.surname.value;\n\n      if (this.name.value != '') {\n        this.newAuthor.name = this.name.value;\n      }\n\n      if (this.secondName.value != '') {\n        this.newAuthor.secondName = this.secondName.value;\n      }\n\n      this.newAuthor.biography = this.biography.value;\n      this.newAuthor.biography = this.birthDate.value;\n\n      if (this.deathDate.value != '') {\n        this.newAuthor.deathDate = this.deathDate.value;\n      }\n\n      this.newAuthor.addedBy = this.userId; //this.authorService\n      //  .createAuthor(this.newAuthor)\n      // .pipe(first())\n      //.subscribe(res =>{\n      //console.log(res);\n      //this.toastr.success(\"Dodano autora! Obecnie czeka na akceptacje.\");\n      //this.router.navigate(['/authors']);\n      // }, error =>{\n      //   console.error(`ErrorHttp: ${JSON.stringify(error)}`);\n      // })\n    }\n\n  }\n\n  NewAuthorComponent.ɵfac = function NewAuthorComponent_Factory(t) {\n    return new (t || NewAuthorComponent)(i0.ɵɵdirectiveInject(i1.AuthorService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.FormBuilder));\n  };\n\n  NewAuthorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewAuthorComponent,\n    selectors: [[\"app-new-author\"]],\n    decls: 45,\n    vars: 17,\n    consts: [[1, \"centerMe\"], [2, \"margin-top\", \"40px\", \"padding-top\", \"40px\"], [2, \"font-size\", \"24px\"], [3, \"formGroup\", \"ngSubmit\"], [2, \"margin\", \"auto\", \"margin-top\", \"40px\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"nazwisko...\", \"formControlName\", \"surname\"], [2, \"margin\", \"auto\", \"margin-top\", \"20px\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"imi\\u0119...\", \"formControlName\", \"name\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"drugie imi\\u0119...\", \"formControlName\", \"secondName\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"biografia...\", \"formControlName\", \"biography\"], [\"matInput\", \"\", \"formControlName\", \"birthDate\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"dateOfBirth\", \"\"], [\"matInput\", \"\", \"formControlName\", \"deathDate\", 3, \"matDatepicker\"], [\"picker\", \"\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"accent\", 2, \"margin-top\", \"30px\"]],\n    template: function NewAuthorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\", 2);\n        i0.ɵɵtext(3, \"Nowy autor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-content\");\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function NewAuthorComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵelementStart(7, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"nazwisko\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵelementStart(12, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(13, \"mat-label\");\n        i0.ɵɵtext(14, \"imi\\u0119\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵelementStart(17, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(18, \"mat-label\");\n        i0.ɵɵtext(19, \"drugie imi\\u0119\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵelementStart(22, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(23, \"mat-label\");\n        i0.ɵɵtext(24, \"biorgrafia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"textarea\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"p\");\n        i0.ɵɵelementStart(27, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(28, \"mat-label\");\n        i0.ɵɵtext(29, \"Data urodzin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 10);\n        i0.ɵɵelement(31, \"mat-datepicker-toggle\", 11);\n        i0.ɵɵelement(32, \"mat-datepicker\", null, 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"p\");\n        i0.ɵɵelementStart(35, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(36, \"mat-label\");\n        i0.ɵɵtext(37, \"Data \\u015Bmierci\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 13);\n        i0.ɵɵelement(39, \"mat-datepicker-toggle\", 11);\n        i0.ɵɵelement(40, \"mat-datepicker\", null, 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"p\");\n        i0.ɵɵelementStart(43, \"button\", 15);\n        i0.ɵɵtext(44, \"Dodaj\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(33);\n\n        const _r1 = i0.ɵɵreference(41);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matDatepicker\", _r0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n      }\n    },\n    directives: [i6.MatCard, i7.MatLabel, i6.MatCardContent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i7.MatFormField, i8.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i9.MatDatepickerInput, i9.MatDatepickerToggle, i7.MatSuffix, i9.MatDatepicker, i10.MatButton],\n    styles: [\".centerMe[_ngcontent-%COMP%]{min-width:300px;max-width:500px;margin:auto;text-align:center}\"]\n  });\n  return NewAuthorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}