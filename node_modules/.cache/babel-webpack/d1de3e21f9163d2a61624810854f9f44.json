{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { CategoryModel } from 'src/app/models/categories/category-models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/category/category.service\";\nimport * as i2 from \"src/app/services/user/user.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nexport let NewCategoryComponent = /*#__PURE__*/(() => {\n  class NewCategoryComponent {\n    constructor(categoryService, userService, toastr, formBuilder, router) {\n      this.categoryService = categoryService;\n      this.userService = userService;\n      this.toastr = toastr;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.newCategory = new CategoryModel();\n      this.userId = '';\n      this.categoryName = new FormControl('');\n      this.form = this.formBuilder.group({\n        categoryName: this.categoryName\n      });\n    }\n\n    isFormDirty() {\n      return !this.form.dirty;\n    }\n\n    onSubmit() {\n      this.userId = this.userService.getUserId();\n      this.newCategory = {\n        id: '00000000-0000-0000-0000-000000000000',\n        category: this.categoryName.value,\n        isBuildIn: true,\n        createdAt: new Date(),\n        userId: this.userId\n      };\n      this.categoryService.createCategory(this.newCategory).pipe(first()).subscribe(res => {\n        console.log(res);\n        this.toastr.success(\"Dodano kategorię\");\n        this.router.navigate(['/categories']);\n      }, error => {\n        console.error(`ErrorHttp: ${JSON.stringify(error)}`);\n      });\n    }\n\n  }\n\n  NewCategoryComponent.ɵfac = function NewCategoryComponent_Factory(t) {\n    return new (t || NewCategoryComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  NewCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewCategoryComponent,\n    selectors: [[\"app-new-category\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[1, \"centerMe\"], [2, \"margin-top\", \"40px\", \"padding-top\", \"40px\"], [2, \"font-size\", \"24px\"], [3, \"formGroup\", \"ngSubmit\"], [2, \"margin\", \"auto\", \"margin-top\", \"40px\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"nowa kategoria...\", \"formControlName\", \"categoryName\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"accent\", 2, \"margin-top\", \"30px\"]],\n    template: function NewCategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\", 2);\n        i0.ɵɵtext(3, \"Nowa Kategoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-content\");\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function NewCategoryComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵelementStart(7, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Kategoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13, \"Dodaj\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"width\", 350, \"px\");\n      }\n    },\n    directives: [i6.MatCard, i7.MatLabel, i6.MatCardContent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i7.MatFormField, i8.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i9.MatButton],\n    styles: [\".centerMe[_ngcontent-%COMP%]{min-width:300px;max-width:500px;margin:auto;text-align:center}\"]\n  });\n  return NewCategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}