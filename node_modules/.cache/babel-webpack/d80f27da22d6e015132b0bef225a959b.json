{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { AuthorRoutingModule } from './author-routing.module';\nimport { MaterialModule } from '../material/material/material.module';\nimport { AuthorService } from 'src/app/services/author/author.service';\nimport { authInterceptorProviders } from 'src/app/helpers/auth.interceptor';\nimport { LoginGuard } from 'src/app/guard/login/login.guard';\nimport { AuthorSoftDeleteGuard } from 'src/app/guard/authors/author-soft-delete.guard';\nimport { AuthorApproveGuard } from 'src/app/guard/authors/author-approve.guard';\nimport { AuthorUpdateGuard } from 'src/app/guard/authors/author-update.guard';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nexport let AuthorModule = /*#__PURE__*/(() => {\n  class AuthorModule {}\n\n  AuthorModule.ɵfac = function AuthorModule_Factory(t) {\n    return new (t || AuthorModule)();\n  };\n\n  AuthorModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AuthorModule\n  });\n  AuthorModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [authInterceptorProviders, AuthorService, LoginGuard, AuthorApproveGuard, AuthorUpdateGuard, AuthorSoftDeleteGuard],\n    imports: [[CommonModule, AuthorRoutingModule, MaterialModule, RouterModule, FormsModule, ReactiveFormsModule, HttpClientModule]]\n  });\n  return AuthorModule;\n})();","map":null,"metadata":{},"sourceType":"module"}